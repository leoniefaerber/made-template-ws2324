pipeline Ex2Pipeline {
    Ex2HttpExtractor
        -> Ex2TextFileInterpreter
        -> Ex2CSVInterpreter
        -> StatusColumnDeleter
        -> Ex2TableInterpreter
        -> Ex2SQLiteLoader;
    
    block Ex2HttpExtractor oftype HttpExtractor {
        url: "https://download-data.deutschebahn.com/static/datasets/haltestellen/D_Bahnhof_2020_alle.CSV";
        // retries
        // retryBackoffMilliseconds
        // retryBackoffStrategy
        // followRedirects
    }

    block Ex2TextFileInterpreter oftype TextFileInterpreter {
        // encoding
        // lineBreak
    }

    block Ex2CSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
        // enclosing
        // enclosingEscape
    }

    block StatusColumnDeleter oftype ColumnDeleter {
        delete: [column J];
    }

    block Ex2TableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "EVA_NR" oftype integer,
            "DS100" oftype text,
            "IFOPT" oftype IFOPT,
            "NAME" oftype text,
            "Verkehr" oftype VerkehrCode,
            "Laenge" oftype Laenge,
            "Breite" oftype Breite,
            "Betreiber_Name" oftype text,
            "Betreiber_Nr" oftype integer,
        ];
    }

    block Ex2SQLiteLoader oftype SQLiteLoader {
        table: "trainstops";
        file: "./trainstops.sqlite";
        dropTable: true;
    }
}

valuetype VerkehrCode oftype text {
        constraints: [
            VerkehrCodeAllowedValues,
        ];
    }

constraint VerkehrCodeAllowedValues on text:
    value in [
        "FV", "RV", "nur DPN",
    ];

valuetype Laenge oftype decimal {
    constraints: [LangenAndBreitenConstraint];
}

valuetype Breite oftype decimal {
    constraints: [LangenAndBreitenConstraint];
}

constraint LangenAndBreitenConstraint oftype RangeConstraint {
    lowerBound: -90;
    upperBound: 90;
}

valuetype IFOPT oftype text {
    constraints: [IFOPTConstraint];
}

constraint IFOPTConstraint oftype RegexConstraint {
    regex: /^[a-z]{2}:[0-9]+:[0-9]+(?::[0-9]*)?$/;
}